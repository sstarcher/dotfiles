alias sed=gsed
git_org() {
    ORG=$1
    shift
    hub api orgs/${ORG}/repos --paginate |  jq '.[].full_name'  | xargs -L1 -P10 hub clone $@
}


tf(){
    terraform "$@" | landscape
}

patch(){
    git checkout master
    git pull
    TAG=$(helm-release . --print-computed-version --bump patch)
    git tag -a -m 'tagging release' $TAG
    git push origin $TAG
}

minor(){
    git checkout master
    git pull
    TAG=$(helm-release . --print-computed-version --bump minor)
    git tag -a -m 'tagging release' $TAG
    git push origin $TAG
}

tag(){
    if [ "$#" -ne 2 ]; then
        echo "Expected 2 parameters, but got $#"
        echo "tag TAG MESSAGE"
        return 1
    fi

    TAG=$1
    MESSAGE=$2

    if [ -z "$GREN_GITHUB_TOKEN" ]; then
        echo 'GREN_GITHUB_TOKEN must be set'
        return 1
    fi

    BRANCH=$(git rev-parse --abbrev-ref HEAD)
    if [ "$BRANCH" != "master" ]; then
        echo 'switching to master'
        git checkout master
    fi

    git pull
    git tag -a "$TAG" -m "$MESSAGE"
    git push origin "$TAG"

    gren release -D commits
}

function brew() {
    local dump=false;
    if [[ $# -gt 0 ]]; then
        case "$1" in
            *install|*tap)
                dump=true;
                ;;
            cask)
                if [[ $# -gt 2 ]]; then
                    case "$2" in
                        *install)
                            dump=true;
                            ;;
                    esac
                fi
                ;;
        esac
    fi
    command brew "$@"

    if $dump; then
        echo "Updating Brewfile"
        command brew bundle dump --force --file="$HOME/Brewfile"
    fi
}

notify(){
    osascript -e "display notification \"$@\""
}

export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
export PATH=$HOME/.gloo/bin:$PATH
export TF_PLUGIN_CACHE_DIR="$HOME/.terraform.d/plugin-cache"


alias k="kubectl $@"

alias kc='kubectl'

alias kgp='kubectl get pods'

alias kgs='kubectl get svc'

alias kgc='kubectl get componentstatuses'

alias kctx='kubectl config current-context'

alias kcon='kubectl config use-context'

alias kgc='kubectl config get-context'

alias kne="kubectl describe nodes | egrep 'Events|Name:' | grep -v 'none'"

alias gf='git commit --fixup HEAD .'

alias pr='git push -u && hub pull-request -o'

alias git=hub

alias pip=pip3

alias grep=ggrep
